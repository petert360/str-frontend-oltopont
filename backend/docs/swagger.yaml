openapi: 3.0.0

info:
  version: 1.0.0
  title: Fullstack Vizsgaremek - Olt√≥pont API
  description: API for the FullStack Vizsgaremek

servers:
  - url: http://localhost:3000

paths:
  /patient:
    get:
      description: Returns a list of patients
      security:
        - bearerAuth: []
      tags:
        - patient
      responses:
        "200":
          description: List of patients returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Patient"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      description: Creates a new patient
      security:
        - bearerAuth: []
      tags:
        - patient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Patient"
      responses:
        "201":
          description: Patient has been created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Patient"
        "400":
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /patient/{_id}:
    get:
      description: Get a patient
      security:
        - bearerAuth: []
      tags:
        - patient
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns a patient
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Patient'
        '404':
          description: Patient based on id doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates a patient
      security:
        - bearerAuth: []
      tags:
        - patient
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':
          description: Patient has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a patient
      security:
        - bearerAuth: []      
      tags:
        - patient
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Patient has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Patient based on id doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /adverse-event:
    get:
      description: Returns a list of adverse-events
      security:
        - bearerAuth: []      
      tags:
        - adverse-event
      responses:
        "200":
          description: List of adverse-events returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AdverseEvent"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      description: Creates a new adverse-event
      security:
        - bearerAuth: []      
      tags:
        - adverse-event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdverseEvent"
      responses:
        "201":
          description: Adverse-event has been created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdverseEvent"
        "400":
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /adverse-event/{_id}:
    get:
      description: Get an adverse-event
      security:
        - bearerAuth: []      
      tags:
        - adverse-event
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns an adverse-event
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/AdverseEvent'
        '404':
          description: Adverse-event based on id doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates an adverse-event
      security:
        - bearerAuth: []      
      tags:
        - adverse-event
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdverseEvent'
      responses:
        '200':
          description: Adverse-event has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdverseEvent'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes an adverse-event
      security:
        - bearerAuth: []      
      tags:
        - adverse-event
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Adverse-event has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Adverse-event based on id doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /place:
    get:
      description: Returns a list of places
      security:
        - bearerAuth: []      
      tags:
        - place
      responses:
        "200":
          description: List of places returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Place"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      description: Creates a new place
      security:
        - bearerAuth: []      
      tags:
        - place
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Place"
      responses:
        "201":
          description: Place has been created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Place"
        "400":
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /place/{_id}:
    get:
      description: Get a place
      security:
        - bearerAuth: []      
      tags:
        - place
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns a place
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Place'
        '404':
          description: Place based on id doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates a place
      security:
        - bearerAuth: []      
      tags:
        - place
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Place'
      responses:
        '200':
          description: Place has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a place
      security:
        - bearerAuth: []      
      tags:
        - place
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Place has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Place based on id doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /vaccination:
    get:
      description: Returns a list of vaccinations
      security:
        - bearerAuth: []      
      tags:
        - vaccination
      responses:
        "200":
          description: List of vaccinations returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Vaccination"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      description: Creates a new vaccination
      security:
        - bearerAuth: []      
      tags:
        - vaccination
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vaccination"
      responses:
        "201":
          description: Vaccination has been created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vaccination"
        "400":
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /vaccination/{_id}:
    get:
      description: Get a vaccination
      security:
        - bearerAuth: []      
      tags:
        - vaccination
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns a vaccination
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Vaccination'
        '404':
          description: Vaccination based on id doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates a vaccination
      security:
        - bearerAuth: []      
      tags:
        - vaccination
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vaccination'
      responses:
        '200':
          description: Vaccination has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vaccination'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a vaccination
      security:
        - bearerAuth: []      
      tags:
        - vaccination
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Vaccination has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Vaccination based on id doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /vaccine:
    get:
      description: Returns a list of vaccines
      security:
        - bearerAuth: []      
      tags:
        - vaccine
      responses:
        "200":
          description: List of vaccines returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Vaccine"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      description: Creates a new vaccine
      security:
        - bearerAuth: []      
      tags:
        - vaccine
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vaccine"
      responses:
        "201":
          description: Vaccine has been created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vaccine"
        "400":
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /vaccine/{_id}:
    get:
      description: Get a vaccine
      security:
        - bearerAuth: []      
      tags:
        - vaccine
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Returns a vaccine
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Vaccine'
        '404':
          description: Vaccine based on id doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      description: Updates a vaccine
      security:
        - bearerAuth: []      
      tags:
        - vaccine
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vaccine'
      responses:
        '200':
          description: Vaccine has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vaccine'
        '400':
          description: Invalid request when the post data is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Removes a vaccine
      security:
        - bearerAuth: []      
      tags:
        - vaccine
      parameters:
        - in: path
          name: _id
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: Vaccine has been deleted successfully
          content:
            application/json:
              schema:
                type: object
                example: {}
        '404':
          description: Vaccine based on id doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /person:
    get:
      description: Returns a list of persons
      responses:
        "200":
          description: List of persons returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      description: Creates a new person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
      responses:
        "201":
          description: Person has been created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /person/{person_id}:
    get:
      description: Returns the person with the given ID
      parameters:
        - name: person_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Person data returned successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
        "404":
          description: Person with the give ID was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    AdverseEvent:
      type: object
      required:
        - patient
        - date
        - description
      properties:
        patient:
          type: string
        date:
          type: string
        description:
          type: string
    Patient:
      type: object
      required:
        - name
        - appointment
        - personalId
        - dob
        - phone
        - email
        - vaccine
        - active
      properties:
        name:
          type: string
        appointment:
          type: string
        personalId:
          type: string
        dob:
          type: string
        phone:
          type: string
        email:
          type: string
        vaccine:
          type: string
        vaccinations:
          type: string
        active:
          type: boolean
    Place:
      type: object
      required:
        - hospital
        - address
        - building
      properties:
        hospital:
          type: string
        address:
          type: string
        building:
          type: string
    Vaccination:
      type: object
      required:
        - patient
        - vaccine
        - date
        - dose
        - injectionSite
        - injectionType
        - adverseEvent
        - eeszt
        - place
      properties:
        patient:
          type: string
        vaccine:
          type: string
        date:
          type: string
        dose:
          type: number
        injectionSite:
          type: string
        injectionType:
          type: string
        adverseEvent:
          type: string
        eeszt:
          type: boolean
        place:
          type: string
    Vaccine:
      type: object
      required:
        - manufacture
        - product
        - lot
        - doseInterval
      properties:
        manufacture:
          type: string
        product:
          type: string
        lot:
          type: string
        doseInterval:
          type: number
    Person:
      type: object
      required:
        - first_name
        - last_name
        - email
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
